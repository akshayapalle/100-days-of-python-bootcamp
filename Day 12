************************************************  Day 12 Topics **********************************************
#Scope and Number Guessing game
#Local Scope
#Global Scope
#NameSpace
#There is no such thing as "Block Scope" in python (if we create a variable within a function, then it is only available in only within that function, but if we create 
# a variable within an "if" block or a "while-loop" or a "for-loop", then that does not count as creating a seperate local scope.
#Global scope is incredibly useful, especillay when defining constants.
#Global constants are variables which you define you never planning or changing it ever again. Ex: value of pi = 3.14159
#In order to differentiate these constants, the naming convention in python is turning into "uppercase" and sepearte with unerscores. Ex: URL, TWITTER_HANDLE, PI etc...

**************************************************** Code starts from here *********************************
********************************************** # Number Guessing Game **************************************
from random import randint

EASY_LEVEL_TURNS = 10
HARD_LEVEL_TURNS = 5


#function to check user's guess against actual answer
def check_answer(guess, answer, turns):
    """Checks answer against guests. Returns the number of turns remaining. """
    if guess > answer:
        print("Too high.")
        return turns - 1
    elif guess < answer:
        print("Too low.")
        return turns - 1
    else:
        print(f"You got it! The answer was {answer} .")
        
#Make function to set difficulty.
def set_difficulty():
    level = input("Choose a difficulty. Type 'easy' or 'hard': ")
    if level == "easy":
        return EASY_LEVEL_TURNS
    else:
        return HARD_LEVEL_TURNS
        
        
def game():
    #Choosing a random number between 1 and 100.
    print("Welcome to the Number Guessing Game!")
    print("I'm thinking of a number between 1 and 100.")
    answer = randint(1, 100)

    turns = set_difficulty()
    #Repeat the guessing functionality if they get it wrong
    guess = 0
    while guess != answer:
        print(f"You have {turns} attempts remaining to guess the number.")
        #Let the user guess a number.
        guess = int(input("Make a guess: "))
        #Track the number of turns and reduce by 1 if they get it wrong.
        turns = check_answer(guess, answer, turns)
        if turns == 0:
            print("You run out of guesses, you loose.")
            print(f"Pssst, the correct answer is {answer}")
            return
        elif guess != answer:
            print("Guess Again: ")
        
            
game()





